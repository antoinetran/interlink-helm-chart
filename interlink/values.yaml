# Default values for interlink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nodeName: virtual-node

interlink:
  image: ghcr.io/intertwin-eu/interlink/interlink:latest
  enabled: false
  exportPodData: false
  dataRootVolume: ""
  # unix socket in /var/run
  socket: null
  # if socket is specified, the address/port are ignored
  address: http://localhost
  port: 4000

virtualNode:
  image: ghcr.io/intertwin-eu/interlink/virtual-kubelet-inttw:latest 
  CPUs: 1000
  MemGiB: 1600
  Pods: 100
  HTTPProxies:
    HTTP: null
    HTTPs: null
  HTTP:
    Insecure: false
  KubeletHTTP:
    Insecure: true

plugin:
  enabled: false
  image: "" 
  commands: [] 
  args: []
  # content of the "config" will be mounted as /etc/interlink/plugin.yaml
  config: ""
  envs: []
    # - name: SLURMCONFIGPATH
    #   value: /etc/interlink/plugin.yaml
  socket: null
  # if socket is specified, the address/port are ignored
  address: ""
  port: 3000

kubernetesApiExposed:
  enabled: false
  # For now, only NodePort is an accepted value.
  serviceType: NodePort
  serviceNodePort: 30443
  endpointPort: 6443
  # Array to be defined, use
  # kubectl get endpoints kubernetes -o jsonpath='{.subsets[0].addresses[*].ip}'
  endpointsIps: null

sshBastion:
  enabled: false
  image: lscr.io/linuxserver/openssh-server:latest 
  clientKeys:
    authorizedKeys: ""
    keysURL: ""
  port: 31022
    
# disable OAUTH when using sockets for communication in the in-cluster mode
OAUTH:
  enabled: false
  image: ghcr.io/intertwin-eu/interlink/virtual-kubelet-inttw-refresh:latest
  TokenURL: DUMMY
  ClientID: DUMMY
  ClientSecret: DUMMY
  RefreshToken: DUMMY
  GrantType: authorization_code
  Audience: DUMMY

# define extra volumes (e.g. for DataRootVolume)
extraVolumes: []
  # - name: data-root
  #   hostPath:
  #     path: /scratch/interlink/
  #     type: DirectoryOrCreate